>>> import bglib.image.base
>>> import bglib.image.css


>>> s = bglib.image.css.Selector('point')
>>> print s
<point></point>

>>> s = bglib.image.css.Selector('point', 'x', '42')
>>> print s
<point x="42"></point>

>>> s = bglib.image.css.Selector('point', 'x', '42', "2")
>>> print s
<point x="42">2</point>


>>> s = bglib.image.css.Selector('point', 'x', '42', "2")
>>> print s
<point x="42">2</point>

>>> s = bglib.image.css.Selector('point', 'x', '42', "2")
>>> print s
<point x="42">2</point>

>>> e = bglib.image.base.Element('point', x=bglib.image.base.IntAttribute(value=42))
>>> e.append("2")
>>> e.x
42

>>> s.is_match(e)
True

>>> e = bglib.image.base.Element('point', x=bglib.image.base.IntAttribute(value=43))
>>> e.append("2")
>>> s.is_match(e)
False

>>> e = bglib.image.base.Element('die', x=bglib.image.base.IntAttribute(value=42))
>>> e.append("2")
>>> s.is_match(e)
False

>>> e = bglib.image.base.Element('point', x=bglib.image.base.IntAttribute(value=42))
>>> s.is_match(e)
False

>>> e = bglib.image.base.Element('point', x=bglib.image.base.IntAttribute(value=42))
>>> e.append("3")
>>> s.is_match(e)
False

>>> e = bglib.image.base.Element('point', x=bglib.image.base.IntAttribute(value=42), y=bglib.image.base.IntAttribute(value=22))
>>> e.append("2")
>>> s.is_match(e)
True

>>> r = bglib.image.css.Rule('~/defaule.css', 0)
>>> r.lineno
0
>>> r.add(s)
>>> r
in line: 0
pattern: <point x="42">2</point>
block: {}

>>> r.update({'image': 'uri("board.jpg")'})
>>> r
in line: 0
pattern: <point x="42">2</point>
block: {'image': 'uri("board.jpg")'}

>>> r.update({'image': 'uri("backgammon.jpg")'})
>>> r
in line: 0
pattern: <point x="42">2</point>
block: {'image': 'uri("backgammon.jpg")'}

>>> e = bglib.image.base.Element('point', x=bglib.image.base.IntAttribute(value=42))
>>> e
<point x="42"></point>


>>> e = bglib.image.base.Element('point', x=bglib.image.base.IntAttribute(value=42))
>>> e.append("2")
>>> e
<point x="42">2</point>

>>> s.is_match(e)
True

>>> r.is_match([e])
True

>>> r.apply([e])
>>> e
<point x="42" image="~/backgammon.jpg">2</point>

>>> e = bglib.image.base.Element('point',  x=bglib.image.base.IntAttribute(value=42))
>>> e
<point x="42"></point>
>>> r.apply([e])
>>> e
<point x="42"></point>

>>> parser = bglib.image.css.CSSParser()
>>> r = parser.rule('~/defaule.css', 0, """point:data(1) { x: 249 ; y: 139 }""")
>>> r
in line: 0
pattern: <point>1</point>
block: {'y': '139', 'x': '249'}

>>> r = parser.rule('~/defaule.css', 0, """point:data(1) { x: 249}""")
>>> r
in line: 0
pattern: <point>1</point>
block: {'x': '249'}

>>> r = parser.rule('~/defaule.css', 0, """point {x: 0; y: 0; width: 341; height: 232}""")
>>> r
in line: 0
pattern: <point></point>
block: {'y': '0', 'x': '0', 'height': '232', 'width': '341'}


>>> r = parser.rule('~/defaule.css', 0, """die:data(1) {image}""")
>>> r
in line: 0
pattern: <die>1</die>
block: {}

>>> r = parser.rule('~/defaule.css', 0, """home[player=you] cube{x: 266; y: 197;}""")
>>> r
in line: 0
pattern: <home player="you"></home> <cube></cube>
block: {'y': '197', 'x': '266'}



>>> b = bglib.image.base.Element('point')
>>> p = bglib.image.base.Element('point', parity=bglib.image.base.ParityAttributeEven())
>>> c = bglib.image.base.Element('chequer', player=bglib.image.base.PlayerAttributeHim())
>>> c.append('1')
>>> c
<chequer player="him">1</chequer>

>>> r = parser.rule('~/defaule.css', 0, """point[parity=even] chequer[player=him]:data(2)  {image: uri("even-green-2.jpg")} """)

>>> r
in line: 0
pattern: <point parity="even"></point> <chequer player="him">2</chequer>
block: {'image': 'uri("even-green-2.jpg")'}

>>> r.pattern[-1]
<chequer player="him">2</chequer>

>>> r.pattern[-1].is_match(c)
False

>>> r.is_match([b, p, c])
False

>>> r.apply([b, p, c])
>>> c
<chequer player="him">1</chequer>



>>> r = parser.rule('~/defaule.css', 0, """point[parity=even] chequer[player=him]:data(1)  {image: uri("even-green-1.jpg")} """)

>>> r
in line: 0
pattern: <point parity="even"></point> <chequer player="him">1</chequer>
block: {'image': 'uri("even-green-1.jpg")'}

>>> r.pattern[-1]
<chequer player="him">1</chequer>

>>> r.pattern[-1].is_match(c)
True

>>> r.is_match([b, p, c])
True

>>> r.apply([b, p, c])
>>> c
<chequer player="him" image="~/even-green-1.jpg">1</chequer>

